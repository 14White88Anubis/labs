#include <iostream>
#include <clocale>
#include <cctype>
#include <string>
#include <climits>
#include <fstream>
#include <algorithm>

using namespace std;

void task1()
{
	setlocale(LC_ALL, "rus");
	char str1;
	string str2;
	for (int i = 0; i < INT_MAX; i++)
	{
		cout << "Введите символ: ";
		cin >> str1;
		if (str1 == '@')
		{
			break;
		}
		else if (isdigit(str1))
		{

		}
		else if (isupper(str1))
		{
			str2 += tolower(str1);
		}
		else if (islower(str1))
		{
			str2 += toupper(str1);
		}
	}
	cout << "Результат: " << str2 << endl;
}

void task2()
{
	double* donate = new double[10];
	int x = 10;
	double middle;
	double sum = 0;
	int count = 0;
	for (int i = 0; i < 10; i++)
	{
		cin >> donate[i];
		if (cin.fail())
		{
			x = i;
		}
	}
	for (int i = 0; i < x; i++)
	{
		sum += donate[i];
	}
	middle = sum / x;
	for (int i = 0; i < x; i++)
	{
		if (donate[i] > middle) count++;
	}
	cout << middle << endl;
	cout << count << endl;
	delete[] donate;
}

void task3()
{
	string text;
	int mass;
	int vowel = 0;
	int consonant = 0;
	int other = 0;
	string word;
	cout << "Enter the words (q to quit): ";
	getline(cin, text);
	mass = text.size();
	mass++;
	for (int i = 0; i < mass; i++)
	{
		if (text[i] == ' ' || text[i] == '\0')
		{
			if (word == "q")
			{
				break;
			}
			if (isalpha(word[0]))
			{
				if (word[0] == 'a' || word[0] == 'e' || word[0] == 'u' || word[0] == 'i' || word[0] == 'o') vowel++;
				else consonant++;
			}
			else other++;
			word.clear();
		}
		else
		{
			word += text[i];
		}
	}
	cout << vowel << " words being with vowels " << endl;
	cout << consonant << " words being with consonants " << endl;
	cout << other << " other ";
}

void task4()
{
	ifstream file;
	char cpy;
	int count = 0;
	file.open("d:\\task4.txt");
	while (file >> cpy) count++;
	cout << "Количество символов: " << count;
	file.close();
}

double add(double x, double y)
{
	return x + y;
}
double division(double x, double y)
{
	return x / y;
}
double minimum(double x, double y)
{
	return min(x, y);
}

int main()
{
	setlocale(LC_ALL, "rus");
	//task1();
	//task2();
	//task3();
	//task4();
	//double t = add(10, 2);
	//double t = division(2.5, 10);
	//cout << t << endl;
	//double t = minimum(10, 5.5);
	system("pause");
	return 0;
}
